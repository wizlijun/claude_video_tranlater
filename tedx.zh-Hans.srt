1
00:00:00,000 --> 00:00:03,580
[音乐]

2
00:00:06,130 --> 00:00:09,280
[音乐]

3
00:00:07,680 --> 00:00:11,440
本世纪初，当我

4
00:00:09,280 --> 00:00:13,840
开始学习软件工程时，

5
00:00:11,440 --> 00:00:17,600
我的一位教授告诉我们，

6
00:00:13,840 --> 00:00:19,760
未来每一份工作都是编程工作。

7
00:00:17,600 --> 00:00:22,480
那是在 2001 年，

8
00:00:19,760 --> 00:00:25,119
他说我们手里拿着一张

9
00:00:22,480 --> 00:00:28,880
保住工作的金票。

10
00:00:25,119 --> 00:00:31,599
就在上个月，GitHub 的首席执行官表示，

11
00:00:28,880 --> 00:00:34,160
编程的未来是

12
00:00:31,599 --> 00:00:36,000
自然语言。

13
00:00:34,160 --> 00:00:38,079
看来我的

14
00:00:36,000 --> 00:00:40,719
教授在本世纪初的预测

15
00:00:38,079 --> 00:00:43,360
将会成为现实，但可能不是

16
00:00:40,719 --> 00:00:45,840
以他想象的方式。

17
00:00:43,360 --> 00:00:48,000
人工智能能够

18
00:00:45,840 --> 00:00:51,520
通过自然语言提示为您编写代码

19
00:00:48,000 --> 00:00:54,079
。  GitHub C-Pilot 可以

20
00:00:51,520 --> 00:00:57,520
为您完成代码并为您修复错误

21
00:00:54,079 --> 00:01:00,399
。 并且聊天 GBT 可以

22
00:00:57,520 --> 00:01:03,760
在几秒钟内为您创建整个项目，并且所有

23
00:01:00,399 --> 00:01:06,720
这些工具可供任何人使用。

24
00:01:03,760 --> 00:01:09,680
因此，我不禁思考，我们是否已经失去了获得

25
00:01:06,720 --> 00:01:13,439
工作保障的黄金门票？

26
00:01:09,680 --> 00:01:16,000
作为一名计算机科学技术学院的教授和一个

27
00:01:13,439 --> 00:01:18,720
学习计算机科学的女儿的父亲，

28
00:01:16,000 --> 00:01:21,200
我面临着一个更大的问题。

29
00:01:18,720 --> 00:01:23,600
如果人工智能要进行编程，那么

30
00:01:21,200 --> 00:01:26,880
我们还有必要学习

31
00:01:23,600 --> 00:01:28,960
软件工程吗？

32
00:01:26,880 --> 00:01:31,119
今天我想

33
00:01:28,960 --> 00:01:33,360
和大家一起探讨一下这个问题。 让我们来谈谈

34
00:01:31,119 --> 00:01:36,479
人工智能能做什么，更

35
00:01:33,360 --> 00:01:38,960
重要的是，我们如何让我们的

36
00:01:36,479 --> 00:01:41,360
软件工程专业的学生为

37
00:01:38,960 --> 00:01:44,479
未来成为一名真正的软件

38
00:01:41,360 --> 00:01:47,759
工程师的角色做好准备。 那么，让我们深入探讨一下。首先，

39
00:01:44,479 --> 00:01:50,720
让我们谈谈在编程方面 AI 擅长什么

40
00:01:47,759 --> 00:01:52,640
。 人工智能

41
00:01:50,720 --> 00:01:55,040
确实擅长生成数千行

42
00:01:52,640 --> 00:01:57,680
代码。 它在编程语言之间进行翻译

43
00:01:55,040 --> 00:02:02,079
。 它可以

44
00:01:57,680 --> 00:02:05,600
为您创建用户界面并修复错误，

45
00:02:02,079 --> 00:02:08,000
并且擅长执行重复性任务和

46
00:02:05,600 --> 00:02:10,560
模式识别。

47
00:02:08,000 --> 00:02:13,360
你知道，有一次我要求 ChatGBT

48
00:02:10,560 --> 00:02:16,959
为我创建一个项目，呃，一个

49
00:02:13,360 --> 00:02:18,879
用 Python 编写的类似 Tinder 的约会应用程序，几秒钟之内，它

50
00:02:16,959 --> 00:02:21,360
实际上就创建了一个完整的

51
00:02:18,879 --> 00:02:23,599
应用程序，其中包含用户配置文件、

52
00:02:21,360 --> 00:02:26,080
滑动逻辑，甚至示例

53
00:02:23,599 --> 00:02:30,680
数据库。 它唯一没

54
00:02:26,080 --> 00:02:30,680
能帮我做的事就是帮我找到一个约会对象。

55
00:02:30,720 --> 00:02:34,720
但人工智能有很多局限性。 我们必须

56
00:02:32,720 --> 00:02:36,480
接受这一点。 你知道，它仍然

57
00:02:34,720 --> 00:02:39,200
不明白

58
00:02:36,480 --> 00:02:42,080
我们要求它们完成的所有任务背后的原因。 嗯，

59
00:02:39,200 --> 00:02:45,280
它需要你根据

60
00:02:42,080 --> 00:02:48,080
现实世界的背景和场景进行人工输入。 它可能

61
00:02:45,280 --> 00:02:51,440
无法很好地优先考虑长期

62
00:02:48,080 --> 00:02:53,760
业务目标并评估权衡。

63
00:02:51,440 --> 00:02:55,280
最后但同样重要的一点是，它不

64
00:02:53,760 --> 00:02:57,599
可靠。

65
00:02:55,280 --> 00:03:00,560
它会产生幻觉，有时会给我们

66
00:02:57,599 --> 00:03:04,239
错误的答案。

67
00:03:00,560 --> 00:03:06,239
统计数据显示，目前 55% 的

68
00:03:04,239 --> 00:03:09,920
开发人员实际上已经开始

69
00:03:06,239 --> 00:03:11,920
使用 Co-pilot，但只有 30% 的开发人员

70
00:03:09,920 --> 00:03:14,080
接受结果而不做任何

71
00:03:11,920 --> 00:03:17,040
改变。 因此，如果您是一名开发人员，而

72
00:03:14,080 --> 00:03:19,200
您不在前 55% 之列，

73
00:03:17,040 --> 00:03:20,800
这意味着您没有使用 AI，那么您就有

74
00:03:19,200 --> 00:03:24,159
麻烦了。

75
00:03:20,800 --> 00:03:26,400
但如果你是那 30% 的人，那就意味着你

76
00:03:24,159 --> 00:03:29,400
太信任人工智能了。 你可能会遇到更大的

77
00:03:26,400 --> 00:03:29,400
麻烦。

78
00:03:29,599 --> 00:03:33,519
好的。 因此，当今所有领先的人工智能都是

79
00:03:31,920 --> 00:03:36,560
建立在大型语言

80
00:03:33,519 --> 00:03:39,120
模型之上，并根据人类知识文本进行训练

81
00:03:36,560 --> 00:03:41,840
。 这真是令人印象深刻。 如果你

82
00:03:39,120 --> 00:03:44,319
给出一个明确的提示，它会给你带来非常

83
00:03:41,840 --> 00:03:46,879
好的结果。 但所有的战略

84
00:03:44,319 --> 00:03:50,080
思想仍然是我们。 这是

85
00:03:46,879 --> 00:03:52,959
人类。 你可以将人工智能视为

86
00:03:50,080 --> 00:03:55,280
你团队中聘请的一名出色的初级开发人员，

87
00:03:52,959 --> 00:03:58,879
他们可以

88
00:03:55,280 --> 00:04:03,120
非常快速高效地完成许多工作。 但

89
00:03:58,879 --> 00:04:06,000
我们必须由人类来定义愿景，

90
00:04:03,120 --> 00:04:09,840
验证结果，并确保

91
00:04:06,000 --> 00:04:11,439
我们所建设的东西对社会有益。

92
00:04:09,840 --> 00:04:14,080
我还想谈另一件事，那就是

93
00:04:11,439 --> 00:04:17,040
人工智能正在努力解决的问题

94
00:04:14,080 --> 00:04:20,160
。 它正在努力

95
00:04:17,040 --> 00:04:22,000
与人类沟通和合作。 好吧，

96
00:04:20,160 --> 00:04:24,240
也许你会说这更多的是一个

97
00:04:22,000 --> 00:04:26,080
人类的问题，对吗？ 我们人类

98
00:04:24,240 --> 00:04:28,320
有时也会遇到同样的问题

99
00:04:26,080 --> 00:04:31,120
。 但你知道，这是我们

100
00:04:28,320 --> 00:04:33,919
必须解决的事情。 让人工智能做人工智能

101
00:04:31,120 --> 00:04:36,720
擅长的事情，我们人类可以处理

102
00:04:33,919 --> 00:04:38,800
一些无聊的工作，比如处理

103
00:04:36,720 --> 00:04:40,800
办公室政治。

104
00:04:38,800 --> 00:04:43,759
好的。 因此，我们讨论了

105
00:04:40,800 --> 00:04:45,440
人工智能的能力和局限性。 现在

106
00:04:43,759 --> 00:04:48,000
我们可以看看软件

107
00:04:45,440 --> 00:04:50,639
工程师的角色。

108
00:04:48,000 --> 00:04:53,360
因此软件工程师的角色

109
00:04:50,639 --> 00:04:55,680
不仅仅是编写代码。 它实际上

110
00:04:53,360 --> 00:04:57,759
谈论的是我们需要

111
00:04:55,680 --> 00:05:01,600
了解用户的需求。 我们需要

112
00:04:57,759 --> 00:05:03,840
跨角色协作，并

113
00:05:01,600 --> 00:05:06,400
以同理心和责任心做出艰难的决定

114
00:05:03,840 --> 00:05:08,240
。 这才是一个软

115
00:05:06,400 --> 00:05:11,360
工程师应该做的事情吧？ 我们

116
00:05:08,240 --> 00:05:13,039
不仅仅是税务执行者。 呃，最好的

117
00:05:11,360 --> 00:05:15,280
工程师不是那些编写代码

118
00:05:13,039 --> 00:05:17,360
最快的人，而是那些思考最

119
00:05:15,280 --> 00:05:20,160
深入的人。

120
00:05:17,360 --> 00:05:22,320
因此，优秀的工程师会解决混乱的

121
00:05:20,160 --> 00:05:24,800
问题和模糊的问题，并引导

122
00:05:22,320 --> 00:05:27,199
机器得出结构化且

123
00:05:24,800 --> 00:05:30,160
有意义的结果。

124
00:05:27,199 --> 00:05:33,120
因此，有系统架构师

125
00:05:30,160 --> 00:05:35,919
设计最佳解决方案，他们

126
00:05:33,120 --> 00:05:39,440
应该是使用人工智能来

127
00:05:35,919 --> 00:05:42,160
实现这些解决方案的人工智能合作者，然后

128
00:05:39,440 --> 00:05:44,000
他们需要成为有道德的技术专家，以

129
00:05:42,160 --> 00:05:46,639
确保我们正在

130
00:05:44,000 --> 00:05:50,240
构建的解决方案真正造福

131
00:05:46,639 --> 00:05:53,039
人类。 因此，人工智能实际上正在使

132
00:05:50,240 --> 00:05:56,320
许多复杂的技术专业任务民主化，

133
00:05:53,039 --> 00:05:58,800
例如，今天，设计师可以模拟一个

134
00:05:56,320 --> 00:06:01,520
应用程序，然后您就知道它

135
00:05:58,800 --> 00:06:03,280
只是通过提示，而营销人员

136
00:06:01,520 --> 00:06:05,600
也不需要数据工程师，

137
00:06:03,280 --> 00:06:08,560
他们只需运行数据分析即可，而

138
00:06:05,600 --> 00:06:10,720
无需编写任何代码。

139
00:06:08,560 --> 00:06:13,759
这是否意味着软工程师正在失去

140
00:06:10,720 --> 00:06:17,039
我们的优势？ 答案是否定的。

141
00:06:13,759 --> 00:06:19,919
实际上你知道它

142
00:06:17,039 --> 00:06:22,479
对于软件工程师来说仍然至关重要，

143
00:06:19,919 --> 00:06:26,319
原因如下。

144
00:06:22,479 --> 00:06:29,199
首先，我们更好地了解人工智能。 我们

145
00:06:26,319 --> 00:06:31,759
不仅知道如何提示，我们还知道

146
00:06:29,199 --> 00:06:34,240
底层是什么，模型、

147
00:06:31,759 --> 00:06:37,520
数据管道、局限性和

148
00:06:34,240 --> 00:06:40,160
风险，理解这些

149
00:06:37,520 --> 00:06:42,800
非常重要，因为人工智能已经融入到

150
00:06:40,160 --> 00:06:46,160
我们正在使用的和未来正在构建的每一款产品中

151
00:06:42,800 --> 00:06:48,319
。 第二，我们可以

152
00:06:46,160 --> 00:06:51,280
在构建软件时更好地利用人工智能

153
00:06:48,319 --> 00:06:53,680
。 因此，如今任何人都可以

154
00:06:51,280 --> 00:06:56,720
制作原型演示或创建具有

155
00:06:53,680 --> 00:06:59,919
简单功能的应用程序，但

156
00:06:56,720 --> 00:07:02,880
软件会考虑更大的图景。

157
00:06:59,919 --> 00:07:05,199
我们实际上正在使用人工智能来构建可

158
00:07:02,880 --> 00:07:07,680

159
00:07:05,199 --> 00:07:10,000
扩展、可靠且可长期

160
00:07:07,680 --> 00:07:13,360
维护的生产就绪软件。

161
00:07:10,000 --> 00:07:16,560
最终，我们正在让人工智能变得更好。 我们对

162
00:07:13,360 --> 00:07:19,520
模型进行微调。 我们优化了

163
00:07:16,560 --> 00:07:22,160
性能并提高了可用性。 我们

164
00:07:19,520 --> 00:07:24,639
让人工智能可供所有人使用和利用

165
00:07:22,160 --> 00:07:26,639
。 下一代

166
00:07:24,639 --> 00:07:29,120
人工智能仍由软件

167
00:07:26,639 --> 00:07:32,639
工程师构建。 你们还记得

168
00:07:29,120 --> 00:07:35,599
GitHub 首席执行官的这句话吗？ 但现实中还不是这样

169
00:07:32,639 --> 00:07:38,800
。 这仍然取决于

170
00:07:35,599 --> 00:07:41,759
软件工程师如何改进人工智能并

171
00:07:38,800 --> 00:07:44,479
实现这一目标。

172
00:07:41,759 --> 00:07:46,960
所以对于软件工程师来说，我们并没有失去获得

173
00:07:44,479 --> 00:07:48,400
工作保障的黄金门票。

174
00:07:46,960 --> 00:07:50,319
事实上，我们收集的信息甚至

175
00:07:48,400 --> 00:07:52,560
更多，因为我们不再只是

176
00:07:50,319 --> 00:07:57,280
开发软件。 我们实际上正在

177
00:07:52,560 --> 00:08:00,879
构建未来智能本身。

178
00:07:57,280 --> 00:08:04,000
我们今天如何训练、指导和

179
00:08:00,879 --> 00:08:07,199
监督人工智能将决定我们明天构建的

180
00:08:04,000 --> 00:08:10,319
系统、技术和社会类型

181
00:08:07,199 --> 00:08:13,199
。

182
00:08:10,319 --> 00:08:16,080
人工智能正在提高底线，而软件

183
00:08:13,199 --> 00:08:18,400
工程师则在提高上限。

184
00:08:16,080 --> 00:08:20,160
我不仅仅想与你们分享这一点。

185
00:08:18,400 --> 00:08:22,000
你可以鼓掌。 没关系。 我

186
00:08:20,160 --> 00:08:23,919
不仅想与系统工程师分享这一点

187
00:08:22,000 --> 00:08:26,080
。 这是给所有人的。

188
00:08:23,919 --> 00:08:28,319
好的？ 我们有人工智能将我们

189
00:08:26,080 --> 00:08:30,960
从地板上连根拔起，但作为人类，我们

190
00:08:28,319 --> 00:08:33,200
必须伸手够到天花板，并把

191
00:08:30,960 --> 00:08:35,519
天花板抬起来。

192
00:08:33,200 --> 00:08:36,719
好的？ 那么说完这些我们现在可以

193
00:08:35,519 --> 00:08:38,719
讨论软件工程

194
00:08:36,719 --> 00:08:41,120
教育了，对吗？ 所以你知道在

195
00:08:38,719 --> 00:08:43,680
过去编码是软件工程教育中非常重要的一部分，

196
00:08:41,120 --> 00:08:45,200
但

197
00:08:43,680 --> 00:08:47,519
软件工程教育

198
00:08:45,200 --> 00:08:49,519
不仅仅是编写代码。 它还

199
00:08:47,519 --> 00:08:52,000
教你如何将

200
00:08:49,519 --> 00:08:54,959
复杂的问题分解成几个步骤，进行

201
00:08:52,000 --> 00:08:57,440
逻辑和批判性思考，并利用

202
00:08:54,959 --> 00:08:59,519
数字工具来构建

203
00:08:57,440 --> 00:09:02,959
真正重要的解决方案。

204
00:08:59,519 --> 00:09:05,600
因此，当每个人的人工智能都是

205
00:09:02,959 --> 00:09:08,640
每个人的助理工程师并成为

206
00:09:05,600 --> 00:09:11,760
协调者时，我们会消除

207
00:09:08,640 --> 00:09:14,240
障碍并打开大门，

208
00:09:11,760 --> 00:09:15,839
为了成为一名

209
00:09:14,240 --> 00:09:17,920
成功的软件工程师，

210
00:09:15,839 --> 00:09:20,800
学生应该尽快超越学习代码

211
00:09:17,920 --> 00:09:23,920
并进入

212
00:09:20,800 --> 00:09:25,680
以下内容，

213
00:09:23,920 --> 00:09:27,440
所以为了将来成为一名

214
00:09:25,680 --> 00:09:29,360
成功的工程师，我们

215
00:09:27,440 --> 00:09:31,839
应该专注于掌握基础知识、

216
00:09:29,360 --> 00:09:33,760
数据结构、

217
00:09:31,839 --> 00:09:35,279
算法、编程概念，

218
00:09:33,760 --> 00:09:37,760
它们仍然非常重要。 花

219
00:09:35,279 --> 00:09:40,000
足够的时间学习这些并

220
00:09:37,760 --> 00:09:42,959
成为这些方面的专家，因为

221
00:09:40,000 --> 00:09:47,519
它们是非常重要的基础。

222
00:09:42,959 --> 00:09:50,560
接下来，像架构师一样思考系统，

223
00:09:47,519 --> 00:09:52,800
因为你知道目标要更高，

224
00:09:50,560 --> 00:09:55,040
尽快满足高级工程师的期望，

225
00:09:52,800 --> 00:09:57,600
并考虑设计

226
00:09:55,040 --> 00:10:00,000
可靠且可

227
00:09:57,600 --> 00:10:02,800
扩展的系统。

228
00:10:00,000 --> 00:10:05,760
超越你，跨学科全面发展

229
00:10:02,800 --> 00:10:08,720
。 软件

230
00:10:05,760 --> 00:10:10,399
工程师可以专注于

231
00:10:08,720 --> 00:10:12,800
前端或后端或

232
00:10:10,399 --> 00:10:15,519
数据库的时代已经一去不复返了。 未来的软件

233
00:10:12,800 --> 00:10:17,600
工程师都是全栈工程师，甚至

234
00:10:15,519 --> 00:10:19,440
更多。 您还需要了解

235
00:10:17,600 --> 00:10:22,160
其他学科，如设计、

236
00:10:19,440 --> 00:10:25,519
产品、数据、项目管理，并

237
00:10:22,160 --> 00:10:27,519
做好身兼数职的准备。

238
00:10:25,519 --> 00:10:30,079
练习沟通与

239
00:10:27,519 --> 00:10:33,600
合作。 学会

240
00:10:30,079 --> 00:10:35,680
通过团队项目与人合作，

241
00:10:33,600 --> 00:10:39,440
因为你知道，在未来，

242
00:10:35,680 --> 00:10:41,519
如果你能解释和联系它，

243
00:10:39,440 --> 00:10:44,720
它会变得越来越重要，

244
00:10:41,519 --> 00:10:47,839
它会让你与众不同。

245
00:10:44,720 --> 00:10:51,600
使用人工智能作为创意合作伙伴。 拥抱

246
00:10:47,839 --> 00:10:53,600
UI，不要讨厌它，学习 LLM、

247
00:10:51,600 --> 00:10:57,279
生成式 AI，你知道，模型

248
00:10:53,600 --> 00:10:59,600
微调和机架等。你

249
00:10:57,279 --> 00:11:01,760
与 AI 讨论你的项目，并将

250
00:10:59,600 --> 00:11:03,920
你的工作委托给 AI，就好像它是

251
00:11:01,760 --> 00:11:07,120
你的队友之一一样。

252
00:11:03,920 --> 00:11:10,959
最后但同样重要的一点是，保持适应能力。

253
00:11:07,120 --> 00:11:13,519
工具会变，但原则永存。 因此，你

254
00:11:10,959 --> 00:11:15,360
应该始终专注于学习如何

255
00:11:13,519 --> 00:11:18,560
学习。

256
00:11:15,360 --> 00:11:20,800
因此，在未来，当每个人都能

257
00:11:18,560 --> 00:11:23,279
编写一点代码时，那些掌握

258
00:11:20,800 --> 00:11:26,399
这门手艺的人将为大家开辟道路

259
00:11:23,279 --> 00:11:29,440
并成为领导者。 因此，在

260
00:11:26,399 --> 00:11:34,440
人工智能时代，软件工程正在

261
00:11:29,440 --> 00:11:34,440
成为领导力的基础。

262
00:11:34,640 --> 00:11:38,640
我已经谈论了很多关于编程的事情，但

263
00:11:36,720 --> 00:11:40,399
也许程序员不再是

264
00:11:38,640 --> 00:11:42,959
我们用来指代

265
00:11:40,399 --> 00:11:45,120
软件工程师的正确术语。

266
00:11:42,959 --> 00:11:48,079
人工智能时代的软件工程师应该是

267
00:11:45,120 --> 00:11:51,120
有远见的人，能够定义有意义的

268
00:11:48,079 --> 00:11:55,200
结果，有意义的问题。 一个

269
00:11:51,120 --> 00:11:58,640
能够连接工具、团队

270
00:11:55,200 --> 00:12:02,240
、学科的桥梁，一个不仅

271
00:11:58,640 --> 00:12:04,000
引领人类，也引领人工智能的领导者。 所以，

272
00:12:02,240 --> 00:12:06,880
未来不属于那些

273
00:12:04,000 --> 00:12:08,560
编码速度最快的人，而

274
00:12:06,880 --> 00:12:12,079
应该属于那些思考

275
00:12:08,560 --> 00:12:14,959
深刻、适应迅速、协作

276
00:12:12,079 --> 00:12:17,519
高效的人。 他们

277
00:12:14,959 --> 00:12:19,360
不仅预测未来，而且创造

278
00:12:17,519 --> 00:12:21,080
未来。

279
00:12:19,360 --> 00:12:21,640
谢谢。

280
00:12:21,080 --> 00:12:28,200
[掌声]

281
00:12:21,640 --> 00:12:28,200
[音乐]

